
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BOLD_IDENTIFIER CODE_SAMPLE CROSSED_IDENTIFIER EOL FIGURE ITALIC_IDENTIFIER LOOP ORDERED_LIST_INDEX TEXT TITLE UNDERLINED_IDENTIFIER programme : statement \n    | statement programme  statement : TITLE EOL\n    | TITLE\n    | unordered_list\n    | ordered_list\n    | simple_style\n    | simple_style EOL\n    | code_sample\n    | TEXT EOL\n    | TEXT\n    | loop \n    | figure  simple_style : bold_text\n    | italic_text\n    | crossed_text\n    | underlined_text  unordered_list : '-' TEXT EOL unordered_list\n    | '-' simple_style EOL unordered_list\n    | '-' TEXT EOL\n    | '-' simple_style EOL\n    | '-' TEXT\n    | '-' simple_style  ordered_list : ORDERED_LIST_INDEX TEXT EOL ordered_list\n    | ORDERED_LIST_INDEX simple_style EOL ordered_list\n    | ORDERED_LIST_INDEX TEXT EOL\n    | ORDERED_LIST_INDEX simple_style EOL\n    | ORDERED_LIST_INDEX TEXT\n    | ORDERED_LIST_INDEX simple_style  bold_text : BOLD_IDENTIFIER TEXT BOLD_IDENTIFIER\n    | BOLD_IDENTIFIER simple_style BOLD_IDENTIFIER italic_text : ITALIC_IDENTIFIER TEXT ITALIC_IDENTIFIER\n    | ITALIC_IDENTIFIER simple_style ITALIC_IDENTIFIER crossed_text : CROSSED_IDENTIFIER TEXT CROSSED_IDENTIFIER\n    | CROSSED_IDENTIFIER simple_style CROSSED_IDENTIFIER underlined_text : UNDERLINED_IDENTIFIER TEXT UNDERLINED_IDENTIFIER\n    | UNDERLINED_IDENTIFIER simple_style UNDERLINED_IDENTIFIER code_sample : CODE_SAMPLE \n    | CODE_SAMPLE EOL loop : LOOP '[' TEXT ']' EOL '{' EOL TEXT EOL '}'  figure : FIGURE '(' TEXT ')' EOL\n    | FIGURE '(' TEXT ')' "
    
_lr_action_items = {'TITLE':([0,2,3,4,5,6,7,8,9,10,13,14,15,16,17,25,26,27,28,29,30,31,32,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,62,64,69,],[3,3,-4,-5,-6,-7,-9,-11,-12,-13,-14,-15,-16,-17,-38,-3,-8,-10,-22,-23,-28,-29,-39,-20,-21,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-18,-19,-24,-25,-42,-41,-40,]),'TEXT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,23,25,26,27,28,29,30,31,32,33,34,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,62,64,66,69,],[8,8,-4,-5,-6,-7,-9,-11,-12,-13,28,30,-14,-15,-16,-17,-38,35,37,39,41,-3,-8,-10,-22,-23,-28,-29,-39,47,48,-20,-21,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-18,-19,-24,-25,-42,-41,67,-40,]),'-':([0,2,3,4,5,6,7,8,9,10,13,14,15,16,17,25,26,27,28,29,30,31,32,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,62,64,69,],[11,11,-4,-5,-6,-7,-9,-11,-12,-13,-14,-15,-16,-17,-38,-3,-8,-10,-22,-23,-28,-29,-39,11,11,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-18,-19,-24,-25,-42,-41,-40,]),'ORDERED_LIST_INDEX':([0,2,3,4,5,6,7,8,9,10,13,14,15,16,17,25,26,27,28,29,30,31,32,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,62,64,69,],[12,12,-4,-5,-6,-7,-9,-11,-12,-13,-14,-15,-16,-17,-38,-3,-8,-10,-22,-23,-28,-29,-39,-20,-21,12,12,-30,-31,-32,-33,-34,-35,-36,-37,-18,-19,-24,-25,-42,-41,-40,]),'CODE_SAMPLE':([0,2,3,4,5,6,7,8,9,10,13,14,15,16,17,25,26,27,28,29,30,31,32,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,62,64,69,],[17,17,-4,-5,-6,-7,-9,-11,-12,-13,-14,-15,-16,-17,-38,-3,-8,-10,-22,-23,-28,-29,-39,-20,-21,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-18,-19,-24,-25,-42,-41,-40,]),'LOOP':([0,2,3,4,5,6,7,8,9,10,13,14,15,16,17,25,26,27,28,29,30,31,32,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,62,64,69,],[18,18,-4,-5,-6,-7,-9,-11,-12,-13,-14,-15,-16,-17,-38,-3,-8,-10,-22,-23,-28,-29,-39,-20,-21,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-18,-19,-24,-25,-42,-41,-40,]),'FIGURE':([0,2,3,4,5,6,7,8,9,10,13,14,15,16,17,25,26,27,28,29,30,31,32,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,62,64,69,],[19,19,-4,-5,-6,-7,-9,-11,-12,-13,-14,-15,-16,-17,-38,-3,-8,-10,-22,-23,-28,-29,-39,-20,-21,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-18,-19,-24,-25,-42,-41,-40,]),'BOLD_IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,23,25,26,27,28,29,30,31,32,35,36,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,62,64,69,],[20,20,-4,-5,-6,-7,-9,-11,-12,-13,20,20,-14,-15,-16,-17,-38,20,20,20,20,-3,-8,-10,-22,-23,-28,-29,-39,49,50,-20,-21,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-18,-19,-24,-25,-42,-41,-40,]),'ITALIC_IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,23,25,26,27,28,29,30,31,32,37,38,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,62,64,69,],[21,21,-4,-5,-6,-7,-9,-11,-12,-13,21,21,-14,-15,-16,-17,-38,21,21,21,21,-3,-8,-10,-22,-23,-28,-29,-39,51,52,-20,-21,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-18,-19,-24,-25,-42,-41,-40,]),'CROSSED_IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,23,25,26,27,28,29,30,31,32,39,40,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,62,64,69,],[22,22,-4,-5,-6,-7,-9,-11,-12,-13,22,22,-14,-15,-16,-17,-38,22,22,22,22,-3,-8,-10,-22,-23,-28,-29,-39,53,54,-20,-21,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-18,-19,-24,-25,-42,-41,-40,]),'UNDERLINED_IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,23,25,26,27,28,29,30,31,32,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,62,64,69,],[23,23,-4,-5,-6,-7,-9,-11,-12,-13,23,23,-14,-15,-16,-17,-38,23,23,23,23,-3,-8,-10,-22,-23,-28,-29,-39,55,56,-20,-21,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-18,-19,-24,-25,-42,-41,-40,]),'$end':([1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,24,25,26,27,28,29,30,31,32,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,62,64,69,],[0,-1,-4,-5,-6,-7,-9,-11,-12,-13,-14,-15,-16,-17,-38,-2,-3,-8,-10,-22,-23,-28,-29,-39,-20,-21,-26,-27,-30,-31,-32,-33,-34,-35,-36,-37,-18,-19,-24,-25,-42,-41,-40,]),'EOL':([3,6,8,13,14,15,16,17,28,29,30,31,49,50,51,52,53,54,55,56,61,62,65,67,],[25,26,27,-14,-15,-16,-17,32,43,44,45,46,-30,-31,-32,-33,-34,-35,-36,-37,63,64,66,68,]),'[':([18,],[33,]),'(':([19,],[34,]),']':([47,],[61,]),')':([48,],[62,]),'{':([63,],[65,]),'}':([68,],[69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,2,],[1,24,]),'statement':([0,2,],[2,2,]),'unordered_list':([0,2,43,44,],[4,4,57,58,]),'ordered_list':([0,2,45,46,],[5,5,59,60,]),'simple_style':([0,2,11,12,20,21,22,23,],[6,6,29,31,36,38,40,42,]),'code_sample':([0,2,],[7,7,]),'loop':([0,2,],[9,9,]),'figure':([0,2,],[10,10,]),'bold_text':([0,2,11,12,20,21,22,23,],[13,13,13,13,13,13,13,13,]),'italic_text':([0,2,11,12,20,21,22,23,],[14,14,14,14,14,14,14,14,]),'crossed_text':([0,2,11,12,20,21,22,23,],[15,15,15,15,15,15,15,15,]),'underlined_text':([0,2,11,12,20,21,22,23,],[16,16,16,16,16,16,16,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser.py',11),
  ('programme -> statement programme','programme',2,'p_programme_statement','parser.py',12),
  ('statement -> TITLE EOL','statement',2,'p_statement','parser.py',20),
  ('statement -> TITLE','statement',1,'p_statement','parser.py',21),
  ('statement -> unordered_list','statement',1,'p_statement','parser.py',22),
  ('statement -> ordered_list','statement',1,'p_statement','parser.py',23),
  ('statement -> simple_style','statement',1,'p_statement','parser.py',24),
  ('statement -> simple_style EOL','statement',2,'p_statement','parser.py',25),
  ('statement -> code_sample','statement',1,'p_statement','parser.py',26),
  ('statement -> TEXT EOL','statement',2,'p_statement','parser.py',27),
  ('statement -> TEXT','statement',1,'p_statement','parser.py',28),
  ('statement -> loop','statement',1,'p_statement','parser.py',29),
  ('statement -> figure','statement',1,'p_statement','parser.py',30),
  ('simple_style -> bold_text','simple_style',1,'p_simple_style','parser.py',35),
  ('simple_style -> italic_text','simple_style',1,'p_simple_style','parser.py',36),
  ('simple_style -> crossed_text','simple_style',1,'p_simple_style','parser.py',37),
  ('simple_style -> underlined_text','simple_style',1,'p_simple_style','parser.py',38),
  ('unordered_list -> - TEXT EOL unordered_list','unordered_list',4,'p_unordered_list','parser.py',42),
  ('unordered_list -> - simple_style EOL unordered_list','unordered_list',4,'p_unordered_list','parser.py',43),
  ('unordered_list -> - TEXT EOL','unordered_list',3,'p_unordered_list','parser.py',44),
  ('unordered_list -> - simple_style EOL','unordered_list',3,'p_unordered_list','parser.py',45),
  ('unordered_list -> - TEXT','unordered_list',2,'p_unordered_list','parser.py',46),
  ('unordered_list -> - simple_style','unordered_list',2,'p_unordered_list','parser.py',47),
  ('ordered_list -> ORDERED_LIST_INDEX TEXT EOL ordered_list','ordered_list',4,'p_ordered_list','parser.py',54),
  ('ordered_list -> ORDERED_LIST_INDEX simple_style EOL ordered_list','ordered_list',4,'p_ordered_list','parser.py',55),
  ('ordered_list -> ORDERED_LIST_INDEX TEXT EOL','ordered_list',3,'p_ordered_list','parser.py',56),
  ('ordered_list -> ORDERED_LIST_INDEX simple_style EOL','ordered_list',3,'p_ordered_list','parser.py',57),
  ('ordered_list -> ORDERED_LIST_INDEX TEXT','ordered_list',2,'p_ordered_list','parser.py',58),
  ('ordered_list -> ORDERED_LIST_INDEX simple_style','ordered_list',2,'p_ordered_list','parser.py',59),
  ('bold_text -> BOLD_IDENTIFIER TEXT BOLD_IDENTIFIER','bold_text',3,'p_bold_text','parser.py',66),
  ('bold_text -> BOLD_IDENTIFIER simple_style BOLD_IDENTIFIER','bold_text',3,'p_bold_text','parser.py',67),
  ('italic_text -> ITALIC_IDENTIFIER TEXT ITALIC_IDENTIFIER','italic_text',3,'p_italic_text','parser.py',71),
  ('italic_text -> ITALIC_IDENTIFIER simple_style ITALIC_IDENTIFIER','italic_text',3,'p_italic_text','parser.py',72),
  ('crossed_text -> CROSSED_IDENTIFIER TEXT CROSSED_IDENTIFIER','crossed_text',3,'p_crossed_text','parser.py',76),
  ('crossed_text -> CROSSED_IDENTIFIER simple_style CROSSED_IDENTIFIER','crossed_text',3,'p_crossed_text','parser.py',77),
  ('underlined_text -> UNDERLINED_IDENTIFIER TEXT UNDERLINED_IDENTIFIER','underlined_text',3,'p_underlined_text','parser.py',81),
  ('underlined_text -> UNDERLINED_IDENTIFIER simple_style UNDERLINED_IDENTIFIER','underlined_text',3,'p_underlined_text','parser.py',82),
  ('code_sample -> CODE_SAMPLE','code_sample',1,'p_code_sample','parser.py',86),
  ('code_sample -> CODE_SAMPLE EOL','code_sample',2,'p_code_sample','parser.py',87),
  ('loop -> LOOP [ TEXT ] EOL { EOL TEXT EOL }','loop',10,'p_loop','parser.py',95),
  ('figure -> FIGURE ( TEXT ) EOL','figure',5,'p_figure','parser.py',111),
  ('figure -> FIGURE ( TEXT )','figure',4,'p_figure','parser.py',112),
]
